<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD32OoA99jqAPfY6gAAAAAAAAAAAAAAAAD93u4A7M7fAKGHngB+ZoAAm4KYAODE
        0wCTdY8ANCFNAAICQAAAAEAAAABHAAAATQAAAE0AAAAAAAAAAAAAAAAAAAAAAPLV4gC5nrIANSBDACoV
        OgAyHUAAMRxAAAAAAAAAAAAAAAAAAPnZ6wn52etv+dnrVgAAAAAAAAAAAAAAAP3e7jDtz+CTpIqhk39n
        gZGfhp2R7dDfkZx9l5E3I1GRAgJAkQAAQJEAAEeVAABNeQAATQ4AAAAAAAAAAAAAAAAAAAAA9djlTLme
        spEuGT6RIg0zkSoVOpEqFDqRAAAAAAAAAAAAAAAA8tPlEPLT5cnz0+Wb////AP7+/gDItL4A/+b2NurM
        3beSeZH0d2B5/4Zvhf+jj5r/aFNl/yQXO/8CATv/AAA9/wAAROAAAE6QAABVDQAAOAAAAAAAAAAAAAAA
        AADmyteLuqGy/1ZBXf9OOVb/VEBb/1Q/W/8AAAAAAAAAAAAAAADmyNkQ5sjZxOXI2Zb///8D/v7+Dsi0
        vhC2lqYUo4ucLW1Zb8puWW//W0pc/xsWGv8PCw7/CAYY/wAAMP8AADX/AAA4jgAAPxoAADkRAAA4BYNs
        gQCBaoEAcl10AMeuu4e7pLD/oo6Y/6KPmP+lkpv/pZKa/wAAAAAAAAAAAAAAAN/D0xDfw9PE4cPUjv//
        /xn///+kxrK8vqOCkryulaK/nYeU75d/jP9/Z3b/Qi5C/1I8Tf8/MUj/AgIq/wAAMf8AADXcAAA2ugAA
        NbgAADA7g2yBAIFqgQByXXQAvKSxg7Gbp/+diZP/m4iR/5yJk/+ciZP/AAAAAAAAAAAAAAAA17zLENm+
        zcCwlafBiXeIi/v6+/Xo3eL/xbC6/6iRnP+Kc4H/qpei/86/xv+yo7L/uqqo/4Bwcv8FBST/AAAs/wAA
        L/8ODDf/PDJV/2JRbKWDbIFzgWqBc3JcdHOeiJe9q5ah/5uIkv+ah5H/m4iS/5uIkv8AAAAAAAAAAAAA
        AADSuMUQ1r3JvZl/kv9rVmv/xL/G/9LT0//DvL7/loCJ/047S/+Ad4H/0tPT/9XV1P/y7s7/q5+E/wUF
        Gf8AACf/AAAp/yEbO/+Lc3//j3aG/4Rtg/+Ca4L/dF51/5F8jP+olJ7/k4CL/5OAi/+UgYz/lIGM/wAA
        AAAAAAAAAAAAANW7yBDZv8u9p46f/1tHXP8wJTj/ISEi/0lCRP+Icnv/LiUq/xYVFv8iIiX/JCQk/7an
        i/+yoYb/CQgR/wEBIv8AACr/IBtB/4hwg/+MdIf/gmuC/4BpgP9zXnX/l4KR/6KNmP9lU2X/YE5h/2RS
        ZP9jUmT/AAAAAAAAAAAAAAAArZOoELKXrb11Y3L/JBom/xcII/9mWV//sqyo/9jO0P+xoqD/oZuV/3t7
        ev8NDRb/mYl3/+LSr/+Si3n/IiA9/wAAG/8MChr/NCsz/zYtNf8yKTL/MSky/y0kLf9iU2D/hXGC/2BO
        Yv9eTWD/YU9i/2FPYv/32OoA+dnsAPDS4wBfRmgLjnOQu0k7Sv8DAAX/OilD/56Jl//IwMH/sbCz/7Gk
        pP/Eu7r/r6mu/zErP/+ZiX///OrG/+nZu/80MUD/AAAG/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/zgt
        Of9vWnH/YU5i/2BPYf9hT2L/YU9i//fY6gD52ewM8NLjFbmfsySSeJLCVEVT/yAbH/9lUWX/a1Vr/0U2
        R/8SDxv/DwwX/zctPf9cS1//Tj1W/6aSi//r1bj/1cCo/zw1M/8NCw7/DgwO/w8MDv8PDA3/Dw0N/xAN
        Dv8QDg//RzpG/3Rfdf9kUmX/Y1Fj/2NRZP9kUmX/99jqAPnZ7HPw0uPK3cHRzsuwwvW2nqz/k32J/2VM
        Yv9ONUz/QSk+/zYiNf82IjX/Pyk9/0MrQ/88JkL/moR//93Hq//Ru6j/jHqG/35sgf+IdYf/inWE/450
        f/+Td37/mH2D/52Gjf+plJz/sJul/6iUnf+plZ7/q5ah/62XpP/32OoA+dnsUPDS443fw9KM3sLRht/D
        0YTLsr+Yq52p76KUoP+jlaD/p5mj/6eZpP+ll6H/npGd/5mMm/+0npL/ya+U/8mzoP+8pqX/vqep/8qt
        qf/PrKH/t669/6631v+qssz/dWtz/2NWWf9eU17/XlFe/2lWaP+HcILM0rfAfPfY6gD52ewA8NLjAN7C
        0gDavs0A1rrIAP///yj////e/v////z+/v/8/v7//P7+//z+/v/8/v///P7+/9vPwf/CrJb/waqV/8ey
        nP/Mtp3/zbmd/8S9qP+Ywdv/js7//5HA4/89TFT/Ji0w/ygvP/8rL0P/IBw7/xoYPq5McJYx99jqAPnZ
        7ADw0uMA3sLSANq+zQDWusgA////Kv///97w9Pf/5ezx/+Xt8f/l7fH/5e3x/+bu8v/n8fb/6/f3/9rZ
        0P+9ppH/wKuX/8aymv+0uK7/gsHn/3LH9f+Ry+v/wszU/73Izv+9zNL/xNTc/8TU3P9sfJX/PU5x9WNz
        kuUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8s////5vX6+//r9vr/6Pb+/+n3/v/p+P7/6fj+/+r6
        ///y////4+Xf/8WsmP/Tu6T/zse9/8WssP/JYWb/yV5a/9hmU//taEv/8nFW//R1XP/3emD/931i/9Fc
        R/+6STj/xVBA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///xz///+R/P//3O3w7v/Tzsj/08/I/9TS
        yf/U0sr/1dPL/93bz//k2cD/2sCZ/56Mdv+osLT/2bG5//8sDv//IQD//y0A//8sAP//LAD//ygA//8n
        AP//MQb//z4S//9EGP//PRL/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Af///wf///+e6d/W/7iY
        ff+3l33/uZqB/7magv+7nob/xaiC/9m9lv/NtaD/MSok/2V3gv/jxcn/+z0Y//M6Ff/rSyr/70cl//w6
        FP/+QBz//UYk//89Gf//RSP//0sq//9GI/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A/vn+AP//
        /5v7+Pb/8unk//Lp4//y6eT/8unk//Pr5P/02an/sJKw/zEr1v8HBSz/anp8/+rIyf/4Phz/n2tt/2Sa
        t/99iJr/5EAj//qMc//xt6r//kMh//9AHv//TCv//0Yk/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/8f8C//X/nN3d2/+CsYb/fbCE/4C2i/+ArYr/foqC/52emf+CiLz/MEXD/ylCaf+AnKX/5cHA//k5
        Gf/ESj7/oGZo/7BaVf/zLgz//1o///p0YP//Lwn//zkT//9FIf//Pxj/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANDP0ALQ1tWck66V/wxmFP8HYxL/Dm8f/wteGv8CGQH/K0ZX/1d9m/9pjqf/UoCg/42z
        yv/dt7X/+jYX//FCJf/rWTn/6lE4/9lCL//fQjL/6U05/+dWO//5RR//7Uoq/9dVQP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAQ6NVAkSlV5w7l0z/KXw3/y58O/80hkX/L3c7/xg2Cv8QLwr/MVNK/2OA
        s/9KcqT/hqnF/9yxrv/4OBv/w5eR/6be4f+mydv/cJSv/4mrwv+t1uH/qNLa/+hmSf+7XVL/bI+o/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5oEwCOqJNnDeWSP8zgUH/NYBC/ziFRv83hEb/MHQ5/xtE
        EP8XMxH/LlBJ/0twpf+fuOf/77m9//wrEf/oQC//3l1O/95UTP/JQDv/0klC/+BZTv/eWUv/9zMT/+Yz
        Fv/HRTf/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAESjVQJFpVacQJlP/zaBQ/81f0L/NYFD/zeG
        R/86jk7/Lm0z/xtEEv8RMAT/MFFf/2Z/kv+pk4z/9HZq//xtYP/4a13/+Gpd//ptX//5a17/+Gpd//hs
        Xf/1dGP/93hj//t1X/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARKNUAkSlVZw/mE//NoFD/zV/
        Qv81gEL/NYFD/zaERf86j0//MHI4/xk6DP8TOg3/By4I/zRUMvjh4OLi8vr84OT1/ODl9fzg5fX84OX1
        /ODl9fzg5fX84OX1/ODl9fzg5vT84AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDo1QCRKVVnD+Y
        T/82gUP/NX9C/zWAQv81gEL/NYFD/zeGR/82g0X/M31A/zWGSP8iXyL/G0IK0qS4pz/y//8s4///LOT/
        /yzk//8s5P//LOT//yzk//8s5P//LOT//yzk//8sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEes
        WQJIrlqhQqBT/zeFRf81gEL/NYBC/zWAQv81gEL/NYFD/zaDRf84ikr/PZZV/y5uLP8dQgDHAAAAEPL8
        /wDk+P8A5fj/AOX4/wDl+P8A5fj/AOX4/wDl+P8A5fj/AOX3/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAASrNdAku2XnRFqFbTPJJL/zeFRf81gEL/NX9C/zV/Qv81f0L/NX9B/zaCRP87kVH/MXAt/yZL
        B8wmTAcYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABKs1wAS7VeCkerWFZEpVXrPJJL/DeGRf82gkP/NoJD/zaCQ/82g0T/OIhI/z2V
        Uf80dy/5KVQKvylUCxYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEqzXABLtV4ASK1ZE0erWFVGqFfaQ6FT/z+ZT/8/mU//P5lP/0Gd
        Uv9Amk//M3Ip/yxeFqgqVgs6KlYMBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHrFgAWNVuA0u2XmxIrlqRRKVVkUSl
        VZFEpVWRRqpZkUSjU5EtXxSRJEIARCpVCwAqVQsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKs1wASrNdAEes
        WQBDo1QARKNUAEOjVABFqFgAQ6JSAC5iGAAmSQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA44ADwOOAA8DjgAPA4AABwOAAAcDgAAAA4AAAAOAAAADgAAAA4AAAAAAA
        AAAAAAAAAAAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/wAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4A
        AAD+AAP//gAD//4AA///gAP//8AP///AD/8=
</value>
  </data>
</root>